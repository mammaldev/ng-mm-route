angular.module("mmRoute",["ngRoute"]).provider("mmRoute",["$routeProvider",function(a){var b=/(:[\w*]+)(\?(?=\/|$))?/g,c=/[:*?]/g,d=/:[^\/]+\?/g;this.setDefaultRoute=function(b){a.otherwise({redirectTo:b}),this.defaultUrl=b},this.setBaseRoute=function(b){a.when("/",{redirectTo:b})},this.setRoleGetter=function(a){this.roleGetter=a},this.parseUrls=function a(b,c){c=c||[];var d=Object.keys(b);if(d.length>0){if(b.hasOwnProperty("url")){var e={url:b.url};return b.access.length>1||"ALL"!==b.access[0].roles[0]?e.routeConf={template:'<mm-role-resolver route-path="'+c.join(".")+'"></mm-role-resolver>'}:e.routeConf=b.access[0].view,[e]}var f=d[0],g=b[f];return delete b[f],a(g,c.concat([f])).concat(a(b,c))}return[]},this.setRoutes=function(b){if(!this.roleGetter)throw new Error("Role getter has not yet been configured. Call setRoles before setRoutes");this.routes=b,this.parseUrls(angular.copy(b)).forEach(function(b){var c=b.url.replace(/\?[^\/]+$/,"");console.log("here",c),a.when(c,b.routeConf)})},this.$get=["$location",function(a){function e(a,e){var g=f(a);if(g){var h=g.url,i=h.match(b);return i&&e&&Object.keys(e).forEach(function(a){i.forEach(function(b){var d=b.replace(c,""),f=b.indexOf("*")===b.length-1;f&&a.slice(0,d.length)===d?h=h.replace(b,e[a]):f||a!==d||(h=h.replace(b,e[a]))})}),h=h.replace(d,"")}}function f(a){for(var b=a.split("."),c=i,d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e))return null;c=c[e]}return c}function g(b,c){a.url(e(b,c))}function h(){return i}var i=this.routes;return{get:e,goTo:g,getRoute:f,getRoutes:h,roleGetter:this.roleGetter,defaultUrl:this.defaultUrl,_parseUrls:this.parseUrls}}]}]);
//# sourceMappingURL=mm-route.min.js.map